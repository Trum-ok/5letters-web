input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate_authorities => ["/etc/elk_certs/ca/ca.crt"]
    ssl_certificate => "/etc/elk_certs/logstash/logstash.crt"
    ssl_key => "/etc/elk_certs/logstash/logstash.key"
    ssl_verify_mode => "none" 
    host => "0.0.0.0"
  }
}

filter {
  # Пример фильтра для обработки nginx-логов
  if [fields][log_type] == "nginx" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }

  # Фильтр для Flask-логов
  if [fields][log_type] == "flask" {
    json {
      source => "message"
    }
  }
}

output {
#     stdout { codec => rubydebug }
# }
  elasticsearch {
    hosts => ["https://${ELASTIC_HOST}:9200"]
    user => "${ELASTIC_USERNAME}"
    password => "${ELASTIC_PASSWORD}"
    ssl => true
    # ssl_certificate => '/etc/elk_certs/localhost.crt'
    # ssl_key => '/etc/ssl/localhost.key'
    # ssl_key => '/etc/ssl/localhost.key'
    # ssl_certificate_verification => false

    cacert => "/etc/elk_certs/ca/ca.crt"
    # ssl_certificate => "/etc/elk_certs/elasticsearch/elasticsearch.crt"
    # ssl_key => "/etc/elk_certs/elasticsearch/elasticsearch.key"
    ilm_enabled => false
    manage_template => true
    template_overwrite => true
    # template => "/usr/share/logstash/templates/fivelet.json"
    # template_name => "fivelet"
    index => "%{[@metadata][beat]}-%{[fields][log_type]}-%{+YYYY.MM.dd}"
  }
}